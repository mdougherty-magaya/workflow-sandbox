on:
  workflow_call:
    inputs:
      sub_folder:
        description: "The sub folder"
        required: false
        default: ""
        type: string
    outputs:
      build_number:
        description: "The build number"
        value: ${{ jobs.main.outputs.build_number }}

jobs:
  main:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.existing-build-number.outputs.build_number || steps.next-build-number.outputs.build_number }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          
      - name: Fetch tags
        run: |
          git fetch --tags
          git show-ref --tags

      - name: Get current version for the commit
        id: current-build-number
        run: |
          CURRENT_NUMBER=$(git tag -l --points-at ${{ github.sha }} | grep -E '^build/${{ inputs.sub_folder }}[0-9]+$') || HIDE_EXIT_CODE=$?
          echo "::notice::Current build tag: $CURRENT_NUMBER"
          if [ ! -z "$CURRENT_NUMBER" ]; then
            SUB_FOLDER=$(echo ${{ inputs.sub_folder }} | sed -E 's/(\/)/\\\//')
            CURRENT_NUMBER=$(echo $CURRENT_NUMBER | sed -e "s/^build\/${SUB_FOLDER}//")      
            echo "::notice::Current build number: $CURRENT_NUMBER"
            echo "CURRENT_BUILD_NUMBER=$CURRENT_NUMBER" >> $GITHUB_OUTPUT
          fi

      - name: Set builder number
        id: existing-build-number
        if: ${{ steps.current-build-number.outputs.CURRENT_BUILD_NUMBER != '' }}
        run: echo "build_number=${{ steps.current-build-number.outputs.CURRENT_BUILD_NUMBER }}" >> $GITHUB_OUTPUT

      - name: Generate builder number
        id: next-build-number
        if: ${{ steps.current-build-number.outputs.CURRENT_BUILD_NUMBER == '' }}
        run: |
          LAST_BUILD_NUMBER=$(git tag -l | grep -E '^build/${{ inputs.sub_folder }}[0-9]+$' | awk -F'\/' '{print $NF}' | sort -un | tail -1) || HIDE_EXIT_CODE=$?
          echo "::notice::Last build number: $LAST_BUILD_NUMBER"
          if [ -z "$LAST_BUILD_NUMBER" ]; then
            LAST_BUILD_NUMBER="0"
          fi
          NEXT_BUILD_NUMBER=$((LAST_BUILD_NUMBER + 1))
          EXIT_CODE=0
          git tag "build/${{ inputs.sub_folder }}${NEXT_BUILD_NUMBER}" ${{ github.sha }} && git push --tags || EXIT_CODE=$?
          if [ $EXIT_CODE -ne 0 ]; then
            git fetch --tags
            CURRENT_NUMBER=$(git tag -l --points-at ${{ github.sha }} | grep -E '^build/${{ inputs.sub_folder }}[0-9]+$') || HIDE_EXIT_CODE=$?
            if [ ! -z "$CURRENT_NUMBER" ]; then
              SUB_FOLDER=$(echo ${{ inputs.sub_folder }} | sed -E 's/(\/)/\\\//')
              LAST_BUILD_NUMBER=$(echo $CURRENT_NUMBER |  sed -e "s/^build\/${SUB_FOLDER}//")
            fi
          fi
          echo "build_number=$LAST_BUILD_NUMBER" >> $GITHUB_OUTPUT
          
        
  dump-outputs:
    runs-on: ubuntu-latest
    needs:
      - main
    steps:
      - name: Dump step outputs v1
        env:
          OUTPUT_CONTEXT: ${{ toJson(steps.existing-build-number.outputs) }}
        run: echo "$OUTPUT_CONTEXT"
      - name: Dump step outputs v2
        env:
          OUTPUT_CONTEXT: ${{ toJson(steps.next-build-number.outputs) }}
        run: echo "$OUTPUT_CONTEXT"

      - name: Dump 'needs' outputs
        env:
          OUTPUT_CONTEXT: ${{ toJson(needs.main.outputs) }}
        run: echo "$OUTPUT_CONTEXT"
