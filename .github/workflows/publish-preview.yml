name: .NET publish release candidate package
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  build:
    name: Build
    needs:
      - get-package-version
      - get-build-number
    runs-on: ubuntu-latest
    env:
      PACKAGE_VERSION: ${{ needs.get-package-version.outputs.version }}
      BUILD_NUMBER: ${{ needs.get-build-number.outputs.build_number }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup .NET Core @ Latest
        uses: actions/setup-dotnet@v3
        with:
          source-url: https://nuget.pkg.github.com/mdougherty-magaya/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        
      - name: Cache .NET files
        id: cache-dotnet
        uses: actions/cache@v3
        env:
          cache-name: cache-dotnet
        with:
          path: ~/.dotnet
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/workflow-sandbox.csproj') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: dotnet workload list
        
      - name: Install workloads (Not Linux)
        if: runner.os != 'Linux'
        run: dotnet workload install maui-android maui-ios

      - name: Install workloads (Not Linux)
        if: runner.os == 'Linux'
        run: dotnet workload install maui-android
        
      - name: Install Android SDK
        run: |
          sudo apt-get -qq update && sudo apt-get -qq install -y android-sdk
          sudo ln -s /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager /usr/local/bin/sdkmanager
          sdkmanager --install "build-tools;21.1.2" "platforms;android-21"       
        
      - name: Restore Packages
        run: dotnet restore
        
      - name: Show condition values
        run: |
          echo "github.event_name=${{ github.event_name }}"
          echo "pull_request.number=${{ github.pull_request.number }}"
          echo "ref=${{ github.ref_name }}"
          echo "default_branch=${{ github.event.repository.default_branch }}"

      - name: Set package version suffix
        if: github.event_name == 'pull_request'
        env:
          EVENT_NUMBER: ${{ github.event.number }}        
        run: |
          echo "VERSION_POSTFIX=-rc.${EVENT_NUMBER}.${BUILD_NUMBER}" >> "$GITHUB_ENV"

      - name: Tool locations
        run: |
          echo "xmllint: $(which xmllint)"
          echo "xmlstarlet: $(which xmlstarlet)"
          
      - name: Set Version code
        run: |
          echo "VERSION_CODE=$(echo $PACKAGE_VERSION | sed 's/[^0-9]*//g')$BUILD_NUMBER" >> "$GITHUB_ENV"
          
      - name: Update AndroidManifest.xml
        env:
          EVENT_NUMBER: ${{ github.event.number }}
        run: |
          echo "Current AndroidManifest:"
          cat ./workflow-sandbox/Platforms/Android/AndroidManifest.xml
          CURRENT_VERSION_CODE=$(grep 'versionCode=\".*\"' ./workflow-sandbox/Platforms/Android/AndroidManifest.xml | sed 's@.*versionCode="\(.*\)".*@\1@')
          echo "Current versionCode=$CURRENT_VERSION_CODE"
          CURRENT_VERSION_NAME=$(grep 'versionName=\".*\"' ./workflow-sandbox/Platforms/Android/AndroidManifest.xml | sed 's@.*versionName="\(.*\)".*@\1@')
          echo "Current versionName=$CURRENT_VERSION_NAME"
          echo "VersionCode=$VERSION_CODE"
          echo "VersionName=${PACKAGE_VERSION}$(echo $VERSION_POSTFIX | sed 's/\-/\\-/g')"
          sed -i "s/$CURRENT_VERSION_CODE/$VERSION_CODE/" ./workflow-sandbox/Platforms/Android/AndroidManifest.xml
          sed -i "s/$CURRENT_VERSION_NAME/${PACKAGE_VERSION}${VERSION_POSTFIX}/" ./workflow-sandbox/Platforms/Android/AndroidManifest.xml
          echo "Updated AndroidManifest:"
          cat ./workflow-sandbox/Platforms/Android/AndroidManifest.xml
        
      - name: Build
        run: dotnet build workflow-sandbox/workflow-sandbox.csproj --configuration Release --no-restore -p:WarningLevel=0

      - name: Upload ${{ env.PACKAGE_VERSION }}${{ env.VERSION_POSTFIX }} build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Sandbox-App-${{ env.PACKAGE_VERSION }}${{ env.VERSION_POSTFIX }}
          path: |
            ./WMS.App/bin/**/*            
            ./WMS.App/obj/**/*            
          retention-days: 15

      - name: Deploy generated package to GitHub registry
        run: dotnet nuget push ./workflow-sandbox/bin/Release/workflow-sandbox*.nupkg --api-key ${{secrets.PUBLISH_TOKEN}} --skip-duplicate --no-symbols
        
      - name: Show environment
        env:
          EVENT_NUMBER: ${{ github.event.number }}
        run: env
        
  get-build-number:
    name: Retrieve build number
    needs:
      - get-package-version
    uses: ./.github/workflows/build-number.yml
    with:
      prefix: "${{ needs.get-package-version.outputs.version }}/"

  get-package-version:
    name: Retrieve package version
    uses: ./.github/workflows/project-version.yml
    with:
      project_file: "./workflow-sandbox/workflow-sandbox.csproj"
      tag_name: "PackageVersion"